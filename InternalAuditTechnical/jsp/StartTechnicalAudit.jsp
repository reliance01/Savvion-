<%--  This JSP has been generated by using from xsl version 9.0 at Wed Mar 09 17:54:11 IST 2022 --%>
<!DOCTYPE html>
<html xmlns:sbm="http://www.savvion.com/sbm" xmlns:bizsolo="http://www.savvion.com/sbm/BizSolo" xmlns:jsp="http://java.sun.com/JSP/Page" xmlns:xalan="http://xml.apache.org/xalan" xmlns:fn="http://www.w3.org/2005/02/xpath-functions" xmlns:sfe="http://www.savvion.com/sbm/sfe" xmlns:c="http://java.sun.com/jsp/jstl/core">
<head><META http-equiv="Content-Type" content="text/html; charset=utf-8"><meta http-equiv="X-UA-Compatible" content="IE=Edge">

<%@ page contentType="text/html; charset=UTF-8" %>
<%@ page import="com.savvion.BizSolo.Server.*,com.savvion.BizSolo.beans.*,com.savvion.sbm.util.DatabaseMapping,java.util.Vector,java.util.Locale" %>
<%@ page import="com.savvion.sbm.bizsolo.util.session.*,java.net.*" %>
<%@ page errorPage="/BizSolo/common/jsp/expcontroller.jsp" %>
<%@ taglib uri="/BizSolo/common/tlds/bizsolo.tld" prefix="bizsolo" %>
<%@ taglib uri="/bpmportal/tld/bpmportal.tld" prefix="sbm" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/fmt" prefix="fmt" %>
<%@ taglib prefix="form" tagdir="/WEB-INF/tags/form"%>
<%@ taglib prefix="sfe" uri="http://jmaki/v1.0/jsp" %>
  <jsp:useBean id="bizManage" class="com.savvion.sbm.bizmanage.api.BizManageBean" scope="session"></jsp:useBean>
  <jsp:useBean id="bean" class="com.savvion.BizSolo.beans.Bean" scope="session"></jsp:useBean>
  <jsp:useBean id="factoryBean" class="com.savvion.BizSolo.beans.EPFactoryBean" scope="session"></jsp:useBean>
  <jsp:useBean id="bizSite" class="com.savvion.sbm.bpmportal.bizsite.api.BizSiteBean" scope="session"></jsp:useBean>
<%! String _PageName = "StartTechnicalAudit"; %>
<%! String __webAppName = "InternalAuditTechnical"; %>
<% pageContext.setAttribute( "contextPath", request.getContextPath()+"/"); %>
<% pageContext.setAttribute( "maxMultiLineLength", DatabaseMapping.self().getSQLSize(java.lang.String.class));  %>
<%java.util.List<String> priorities = com.savvion.sbm.bpmportal.util.PortalUtil.self().getPriorities();%>
<% pageContext.setAttribute( "_priorities",priorities); %>
<bizsolo:if test='<%=_PageName.equals(request.getParameter("_PageName")) %>'>
    <bizsolo:setDS name="branch,branchType,region,auditStartDate,auditEndDate,uploadAnnexureAuditor,sampleDoc"></bizsolo:setDS>
    <bizsolo:choose>
<bizsolo:when test='<%=request.getParameter("bizsite_reassignTask") !=null %>'>
      <bizsolo:initDS name="performer" param="bizsite_assigneeName" hexval="FALSE"></bizsolo:initDS>
      <bizsolo:executeAction epClassName="com.savvion.BizSolo.beans.PAKReassignWI" perfMethod="commit" mode="BizSite" dsi="sampleDoc" dso="uploadAnnexureAuditor,auditEndDate,auditStartDate,region,branchType,branch"></bizsolo:executeAction>
</bizsolo:when>
<bizsolo:when test='<%=request.getParameter("bizsite_saveTask") !=null %>'>
      <bizsolo:executeAction epClassName="com.savvion.BizSolo.beans.PAKUpdateDS" perfMethod="commit" mode="BizSite" dsi="uploadAnnexureAuditor,auditEndDate,auditStartDate,region,branchType,branch"></bizsolo:executeAction>
</bizsolo:when>
    <bizsolo:otherwise>
      <bizsolo:executeAction epClassName="com.savvion.BizSolo.beans.PAKSetDS" perfMethod="commit" mode="BizSite" dsi="uploadAnnexureAuditor,auditEndDate,auditStartDate,region,branchType,branch" res=""></bizsolo:executeAction>
      </bizsolo:otherwise>
    </bizsolo:choose>
<% /* Workaround, retAddr will disappear in the future */ %>
<% String retAddr = bean.getPropString("returnPage"); %>
<% if(retAddr != null) { %>
<bizsolo:redirectURL page="<%= retAddr %>"/>
<% } %>
</bizsolo:if>
<bizsolo:if test='<%= ! _PageName.equals(request.getParameter("_PageName")) %>'>
    <bizsolo:initApp mode="BizSite" name="InternalAuditTechnical"></bizsolo:initApp>
<bizsolo:initDS name="branch" type="STRING"></bizsolo:initDS>
<bizsolo:initDS name="branchType" type="STRING" choices="Select|Branch Office|Retail HUB Operation|Commercial HUB Operation|OD Claims|Legal Claims|Center Office"></bizsolo:initDS>
<bizsolo:initDS name="region" type="STRING"></bizsolo:initDS>
<bizsolo:initDS name="auditStartDate" type="DATETIME"></bizsolo:initDS>
<bizsolo:initDS name="auditEndDate" type="DATETIME"></bizsolo:initDS>
<bizsolo:initDS name="uploadAnnexureAuditor" type="DOCUMENT"></bizsolo:initDS>
<bizsolo:initDS name="sampleDoc" type="DOCUMENT"></bizsolo:initDS>
    <bizsolo:executeAction epClassName="com.savvion.BizSolo.beans.PAKGetDS" perfMethod="commit" mode="BizSite" dso="sampleDoc,uploadAnnexureAuditor,auditEndDate,auditStartDate,region,branchType,branch"></bizsolo:executeAction>
</bizsolo:if>

<title>StartTechnicalAudit</title>
<%boolean isStandaloneBS = (bizManage == null || bizManage.getName() == null || "".equals(bizManage.getName()) || bizManage.getLocale() == null);Locale myLocale = (!isStandaloneBS) ? bizManage.getLocale() : request.getLocale();%>
<!-- Javascript -->
<script language="JavaScript"> var getLocalizedString = parent.getLocalizedString; </script>
<form:includes contextPath="${contextPath}"/>
<script language="JavaScript">
     
      var isIFrame = <%= (PublicResources.INTERACTIVE_MODE.equalsIgnoreCase(bean.getPropString(PublicResources.MODE)) || PublicResources.SLAVE_MODE.equalsIgnoreCase(bean.getPropString(PublicResources.MODE))) ? true : false %>;
      

    function getContextPath(){
        return "<%=request.getContextPath()%>";
    }
</script>


<sbm:setLocale value="<%= bizManage.getLocale() %>"></sbm:setLocale>
<% try{ %><sbm:setBundle scope="page" basename="InternalAuditTechnical/properties/InternalAuditTechnical"></sbm:setBundle><% } catch(Exception e){}%>
<bizsolo:getApplicationResources baseName="InternalAuditTechnical/properties/InternalAuditTechnical"/></head>
<body class="apbody yui-skin-sam" onLoad="setCheckBoxStyleForIE();hideControls();beforeInitControls();initControls();initTabs();sbm.utils.onDOMReady();">
<form method="post" name="form" onsubmit="return sbm.utils.onFormSubmit();">
<div id="northDiv" style="height:0px;display:none;"><bizsolo:xsrf/></div><% /* Workaround, activityName will disappear in the future */ %>
<% String activityName = bean.getPropString("workitemName"); %>
<div id="resultDiv">
<div style='visibility:hidden;display:none' class='vBoxClass' name='errors' id='errors'></div>
<input name="_PageName" type="hidden" value="StartTechnicalAudit">
<%if(bean.getPropString("workitemName") != null) {%><input name="_WorkitemName" type="hidden" value="<%= URLHexCoder.encode(bean.getPropString("workitemName")) %>"/><input name="_WorkitemId" type="hidden" value="<%= bean.getPropLong("workitemId") %>"/><%}%>
<input name="bizsite_pagetype" type="hidden" value="activity">
<input name="_ProcessTemplateName" type="hidden" value='<%=bean.getPropString("ptName")%>'>
<input name="_yahoo_flow_button" type="hidden" value=''>
<!-- Content --> 

    
<!-- Header -->

                    <bizsolo:choose><bizsolo:when test='<%=bean.getPropString(\"workitemName\") != null %>'><table width="100%" cellspacing="0" cellpadding="0" border="0">
<tr>
<td class="ApSegTblInBg">
<table width="100%" cellpadding="4" align="center" cellspacing="0" border="0">
<tr>

<td class="ApSegTitle" align="center"><bizsolo:choose><bizsolo:when test='<%=bean.getPropString(\"workitemName\") != null %>'><bizsolo:getDS name="workitemName"></bizsolo:getDS></bizsolo:when><bizsolo:otherwise><%=_PageName%></bizsolo:otherwise></bizsolo:choose></td>
</tr>
</table>
<table class="ApSegDataTbl" width="100%" cellspacing="1" cellpadding="4" border="0">
<tr>
<td width="15%" class="ApSegGenLabel"><bizsolo:getLabel type="RESOURCE" name="BIZSITE_INSTRUCTION_LABEL"></bizsolo:getLabel></td><td width="85%" class="ApSegGenData" colspan="5"><sbm:message key="workstep.StartTechnicalAudit.instruction" escapeLine="true"></sbm:message></td>
</tr>
<tr>
<td width="15%" class="ApSegGenLabel"><bizsolo:getLabel type="RESOURCE" name="BIZSITE_PRIORITY_LABEL"></bizsolo:getLabel></td><td width="15%" class="ApSegGenData"><bizsolo:getDS name="bizsite_priority"></bizsolo:getDS></td>
<td width="15%" class="ApSegGenLabel"><bizsolo:getLabel type="RESOURCE" name="BIZSITE_STARTDATE_LABEL"></bizsolo:getLabel></td><td width="15%" class="ApSegGenData"><bizsolo:getDS name="bizsite_startDate"></bizsolo:getDS></td>
<td width="15%" class="ApSegGenLabel"><bizsolo:getLabel type="RESOURCE" name="BIZSITE_DUEDATE_LABEL"></bizsolo:getLabel></td><td width="15%" class="ApSegGenData"><bizsolo:getDS name="bizsite_dueDate"></bizsolo:getDS></td>
</tr>
</table>
</td>
</tr>
</table></bizsolo:when></bizsolo:choose>

    <%
    com.rel.techaudit.utilities.TechnicalAuditUtility customUtility = new com.rel.techaudit.utilities.TechnicalAuditUtility();
%>

<link rel="stylesheet" type="text/css" href="style/commonForAudit.css" />
<link rel="stylesheet" type="text/css" href="style/jquery-ui.css">
<link rel="stylesheet" type="text/css" href="style/jquery.multiselect.css">
<link rel="stylesheet" type="text/css" href="style/style-my-tooltips.css" />

<script type="text/javascript" src="script/jquery-1.10.2.js"></script>
<script type="text/javascript" src="script/jquery.style-my-tooltips.js"></script>     
<script type="text/javascript" src="script/commonJS.js"></script>     
<script type="text/javascript" src="script/jquery-ui.min.js"></script>
<script type="text/javascript" src="script/jquery.multiselect.js"></script>

<div class="webPageContainer" >
<div class="header">
 Start Technical Audit
</div>

<script>

    var allDynamicCreatedTableIds = [];
    var prmtrs = [];     
    var dprtmntList = [];
    var classList = [];
    var riskrtList = [];
    var OD_Legal_ClassList = [];
    var claimCtgyList = [];
    var OD_claimStatusList = [];
    var stlmntBsisList = [];
    var courtTypList = [];
    var ntreLossList = [];
    var Legal_claimStatusList = [];
    var btnObj;
    
<%   
  String piid = activityName.split("#")[1].split("::")[0];
  String workStepName = activityName.split("::")[1];
  String region = bean.getPropString("region");
  String branch = bean.getPropString("branch");
%>
  
$(document).ready(function()
{
     showLoading();
     pwr.getDepartmentValues(callbackDepartment);
});

function callbackDepartment(values)
{
    dprtmntList = values;
    pwr.getClassValues(callbackClass);
}

function callbackClass(values)
{
    classList = values;
    pwr.getRiskRateValue(callbackRiskRate);  
}
     
function callbackRiskRate(values)
{
    riskrtList = values.split(",");
    if('<%= bean.getPropString("branchType") %>' == 'OD Claims')
    {
        classList = [];
        pwr.getOD_Legal_ClassValues(callbackgetOD_Legal_Class);    
    }
    else if('<%= bean.getPropString("branchType") %>' == 'Legal Claims')
    {
        classList = [];
        pwr.getOD_Legal_ClassValues(callbackgetOD_Legal_ClassVal);
    }
    else
    {
        pwr.checkInstanceIdExist('<%= piid %>',callbackCheckInstanceExist);    
    }
}        

function callbackgetOD_Legal_Class(values)
{
    classList = values;
    pwr.getClaimCategory(callbkClaimCtgy);
}

function callbkClaimCtgy(values)
{
    claimCtgyList = values;
    pwr.getOD_ClaimStatus(callbkODClaimStatus);
}

function callbkODClaimStatus(values)
{
    OD_claimStatusList = values;
    pwr.getSettlementBasis(callbkStlmntBsis);
}

function callbkStlmntBsis(values)
{
    stlmntBsisList = values;
    pwr.checkInstanceIdExist('<%= piid %>',callbackCheckInstanceExist);
}
    
function callbackgetOD_Legal_ClassVal(values)
{
    classList = values;
    pwr.getCourtTypList(callbkCourtTyp);
}

function callbkCourtTyp(values)
{
    courtTypList = values;
    pwr.getNatureLossList(callbkNatureLoss);
}

function callbkNatureLoss(values)
{
    ntreLossList = values;
    pwr.getLegal_ClaimStatus(callbkLegalClaimStatus);
}

function callbkLegalClaimStatus(values)
{
    Legal_claimStatusList = values;
    pwr.checkInstanceIdExist('<%= piid %>',callbackCheckInstanceExist);    
}

function callbackCheckInstanceExist(value)
{
    if(value == 0)
    {
        pwr.insertBlankDetail('<%=piid%>','<%=region%>','<%=branch%>',callbackInsertBlankDetail);
    }
    else
    {
        pwr.retrieveSavedData('<%= piid %>','<%= workStepName %>',callBackRetrieveSavedData);        
    }
}        

        
function callbackInsertBlankDetail(value)
{
    pwr.retrieveSavedData('<%= piid %>','<%= workStepName %>',callBackRetrieveSavedData);
}


function callBackRetrieveSavedData(auditData)
{
    var duplictPrmtrs = [];
    for(var i = 0; i < auditData.length; i++ )
    {
        duplictPrmtrs.push(auditData[i].PARAMETER_VALUE);
    }
    prmtrs = duplictPrmtrs.unique();
    allDynamicCreatedTableIds = prmtrs;
    createMap(auditData);
    
    for(var i = 0; i < prmtrs.length; i++)
    {   
        var methodOutput = 'showClickedParameterDataTable(\''+prmtrs[i]+'\')';
        createDynamicHyperlink("_"+prmtrs[i],methodOutput,prmtrs[i],"parameterLinkContainerId");    
        createDymamicTableHead(prmtrs[i],columnNames('StartAuditPage','<%= bean.getPropString("branchType") %>'),"dynamicCreatedTableContainerId","dynamicTableTH1");
        createDynamicTableBody(prmtrs[i],prmtr_sbprmtrMap[prmtrs[i]],columnNames('StartAuditPage','<%= bean.getPropString("branchType") %>'));
        setValuesToFields(prmtrs[i],auditData);
    }
    showClickedParameterDataTable(prmtrs[0]);
    setDeleteEntries();
} 


function createDynamicTableBody(parameterValue,subParameterValue,parameterWiseTableHeaderList)
{
    var departmentDropDownOptions;
    var classDropDownOptions; 
    var riskRateDropDownOptions;    
    var claimCtgyDropDownOptions;
    var OD_claimStatusDropDownOptions;
    var stlmntBsisDropDownOptions;
    var courtTypDropDownOptions;
    var ntreLossDropDownOptions;
    var Legal_claimStatusDropDownOptions;
    
    var tableObj = document.getElementById(parameterValue);
    var tableBodyObj = document.createElement('tbody');
    tableObj.appendChild(tableBodyObj);
    var tableTbodyObj = tableObj.getElementsByTagName("tbody")[0];
    
    if('<%= bean.getPropString("branchType") %>' == 'OD Claims')
    {
        for(var i=0;i<claimCtgyList.length;i++)
        {
	    claimCtgyDropDownOptions += "<option value=\""+claimCtgyList[i]+"\">"+claimCtgyList[i]+"</option>";
	}
        for(var i=0;i<OD_claimStatusList.length;i++)
	{
	    OD_claimStatusDropDownOptions += "<option value=\""+OD_claimStatusList[i]+"\">"+OD_claimStatusList[i]+"</option>";
	}
	for(var i=0;i<stlmntBsisList.length;i++)
	{
            stlmntBsisDropDownOptions += "<option value=\""+stlmntBsisList[i]+"\">"+stlmntBsisList[i]+"</option>";
	}
    }
    else if('<%= bean.getPropString("branchType") %>' == 'Legal Claims')
    {
	for(var i=0;i<courtTypList.length;i++)
	{
	    courtTypDropDownOptions += "<option value=\""+courtTypList[i]+"\">"+courtTypList[i]+"</option>";
    	}
        for(var i=0;i<ntreLossList.length;i++)
    	{
    	    ntreLossDropDownOptions += "<option value=\""+ntreLossList[i]+"\">"+ntreLossList[i]+"</option>";
    	}
    	for(var i=0;i<Legal_claimStatusList.length;i++)
    	{
    	    Legal_claimStatusDropDownOptions += "<option value=\""+Legal_claimStatusList[i]+"\">"+Legal_claimStatusList[i]+"</option>";
    	}
    }
    
    for(var i=0;i<dprtmntList.length;i++)
    {
        departmentDropDownOptions += "<option value=\""+dprtmntList[i]+"\">"+dprtmntList[i]+"</option>";
    }
    for(var i=0;i<classList.length;i++)
    {
        classDropDownOptions += "<option value=\""+classList[i]+"\">"+classList[i]+"</option>";
    }
    for(var i=0;i<riskrtList.length;i++)
    {
        riskRateDropDownOptions += "<option value=\""+riskrtList[i]+"\" style='background:\""+riskRateColorMapp(riskrtList[i].split('-')[0]).split('-')[0]+"\";color:\""+riskRateColorMapp(riskrtList[i].split('-')[0]).split('-')[1]+"\";font-weight:bold;' >"+riskrtList[i]+"</option>";
    }   
    for(var i=0;i<subParameterValue.length;i++)
    {   
        var tableRowObj = tableTbodyObj.insertRow(i);
        var isValueEven = isEven(i);
 	if(isValueEven == true)
 	{
 	    tableRowObj.className = "evenRowStyle";
 	}
 	else
 	{
 	    tableRowObj.className = "oddRowStyle";
        }
 	for(var j=0;j<parameterWiseTableHeaderList.length;j++)
 	{
 	    var tableRowCellObj = tableRowObj.insertCell(j);
 	    tableRowCellObj.className = "dynamicTableCell";
 	    if(parameterWiseTableHeaderList[j] == "POM NO")
 	    {
 		 tableRowCellObj.innerHTML = "<span>"+(i+1)+"</span>";
 	    }
 	    else if(parameterWiseTableHeaderList[j] == "DEPARTMENT")
 	    {
 		 tableRowCellObj.innerHTML = "<select multiple='multiple' class='ApInptSelect'>"+departmentDropDownOptions+"</select>";   
            }
            else if(parameterWiseTableHeaderList[j] == "CLASS")
            {
 		 tableRowCellObj.innerHTML = "<select multiple='multiple' class='ApInptSelect'>"+classDropDownOptions+"</select>";
 	    }
 	    else if(parameterWiseTableHeaderList[j] == "PARAMETER")
 	    {
 		 tableRowCellObj.innerHTML = parameterValue;
 		 setValueInTitle(tableRowCellObj,parameterValue);
 	    }
 	    else if(parameterWiseTableHeaderList[j] == "SUB PARAMETER")
 	    {
 		 tableRowCellObj.innerHTML = subParameterValue[i];
 		 setValueInTitle(tableRowCellObj,subParameterValue[i]);
 	    }
 	    else if(parameterWiseTableHeaderList[j] == "RISK RATE")
 	    {
 		 tableRowCellObj.innerHTML = "<select class='ApInptSelect' onChange='enableFreeTxt(this);'><option value='Select'>Select</option>"+riskRateDropDownOptions+"</select>";
 	    }
 	    else if(parameterWiseTableHeaderList[j] == "CLAIM CATEGORY")
	    {
		 tableRowCellObj.innerHTML = "<select multiple='multiple' class='ApInptSelect'>"+claimCtgyDropDownOptions+"</select>";
 	    }
 	    else if(parameterWiseTableHeaderList[j] == "CLAIM STATUS")
	    {
	         if('<%= bean.getPropString("branchType") %>' == 'OD Claims')
	         {
	             tableRowCellObj.innerHTML = "<select multiple='multiple' class='ApInptSelect'>"+OD_claimStatusDropDownOptions+"</select>";
	         }
	         else
		 {
		     tableRowCellObj.innerHTML = "<select multiple='multiple' class='ApInptSelect'>"+Legal_claimStatusDropDownOptions+"</select>";
		 }
 	    }
 	    else if(parameterWiseTableHeaderList[j] == "SETTLEMENT BASIS")
	    {
		 tableRowCellObj.innerHTML = "<select multiple='multiple' class='ApInptSelect'>"+stlmntBsisDropDownOptions+"</select>";
 	    }
 	    else if(parameterWiseTableHeaderList[j] == "COURT TYPE")
	    {
		 tableRowCellObj.innerHTML = "<select multiple='multiple' class='ApInptSelect'>"+courtTypDropDownOptions+"</select>";
 	    }
 	    else if(parameterWiseTableHeaderList[j] == "LOSS NATURE")
	    {
		 tableRowCellObj.innerHTML = "<select multiple='multiple' class='ApInptSelect'>"+ntreLossDropDownOptions+"</select>";
 	    }
 	    else
 	    {
 		 tableRowCellObj.innerHTML = "<input type='text' onmouseover='getValueOfField(this);' onClick='lightbox_open(this);' size='5' />";
 	    }
       }
   }
   if('<%= bean.getPropString("branchType") %>' == 'OD Claims' || '<%= bean.getPropString("branchType") %>' == 'Legal Claims')
   {
       $('[multiple=multiple]').multiselect({
                     header: false,
                     minWidth : 100,
                     show:['slide', 500],
                     hide:['explode', 500],
                     beforeopen: function(event, ui)
                     {
                         var currentDD = this.parentNode.cellIndex;
           	         if(currentDD == 4 || currentDD == 5 || currentDD == 6 || currentDD == 7)
       	                 {
       	                      var rowObj1 = this.parentNode.parentNode;
       	                      var arr1 = $(rowObj1).find('td:eq((currentDD-1)) [multiple=multiple]').multiselect("getChecked");
       	                      if(arr1[0] == null)
       	                      {
       	                        //  $(this).multiselect('disable');
       	                      }
                         }
                     },
                     close: function(event, ui)
                     {
                          var currentDD = this.parentNode.cellIndex;
       	                  if(currentDD == 3 || currentDD == 4 || currentDD == 5 || currentDD == 6)
       	                  {
       	                      var arr = $(this).multiselect("getChecked");
       	                      if(arr[0] != null)
       	                      {
       	                           var rowObj = this.parentNode.parentNode;
       	                          // $(rowObj).find('td:eq(currentDD+1) [multiple=multiple]').multiselect("enable");
       	          	      }
       	                  }
       	                  if(currentDD == 7)
       	                  {
       	                       var arr2 = $(this).multiselect("getChecked");
       	                       if(arr2[0] != null)
       	                       {
       	   	                   var rowObj = this.parentNode.parentNode;
       		                   $(rowObj).find('td:eq(8) select').prop('disabled',false);
       	                       } 
       	                  } 
       	             }
              }); 
   }
   else
   {
       $('[multiple=multiple]').multiselect({
              header: false,
              minWidth : 100,
              show:['slide', 500],
              hide:['explode', 500],
              beforeopen: function(event, ui)
              {
    	          if(this.parentNode.cellIndex == 4)
	          {
	              var rowObj1 = this.parentNode.parentNode;
	              var arr1 = $(rowObj1).find('td:eq(3) [multiple=multiple]').multiselect("getChecked");
	              if(arr1[0] == null)
	              {
	                  $(this).multiselect('disable');
	              }
                  }
              },
              close: function(event, ui)
              {
	          if(this.parentNode.cellIndex == 3)
	          {
	              var arr = $(this).multiselect("getChecked");
	              if(arr[0] != null)
	              {
	                  var rowObj = this.parentNode.parentNode;
	                  $(rowObj).find('td:eq(4) [multiple=multiple]').multiselect("enable");
	              }
	          }
	          if(this.parentNode.cellIndex == 4)
	          {
	              var arr2 = $(this).multiselect("getChecked");
	              if(arr2[0] != null)
	              {
	   	          var rowObj = this.parentNode.parentNode;
		          $(rowObj).find('td:eq(5) select').prop('disabled',false);
	              } 
	          } 
	      }
         }); 
     }
     loadingComplete();
}    


var dataRowCnt = 0;             
function setValuesToFields(tableId,auditData)
{       
     var rows = document.getElementById(tableId).getElementsByTagName('tbody')[0].getElementsByTagName('tr').length;
     var clmns = columnNames('StartAuditPage','<%= bean.getPropString("branchType") %>');
     for(var j=0;j<rows;j++)
     {
          var rowObj = document.getElementById(tableId).getElementsByTagName('tbody')[0].getElementsByTagName('tr')[j];
          for(var k=0;k<clmns.length;k++)
          {
              if(clmns[k] == 'POM NO' || clmns[k] == 'SUB PARAMETER' || clmns[k] == 'PARAMETER')
              { 
                  continue;
              }
              else if(clmns[k] == 'COURT TYPE' || clmns[k] == 'LOSS NATURE' || clmns[k] == 'CLAIM STATUS' || clmns[k] == 'DEPARTMENT' || clmns[k] == 'CLASS' || clmns[k] == 'CLAIM CATEGORY' || clmns[k] == 'SETTLEMENT BASIS')
              {
                  var plgObj = $(rowObj).find('td:eq('+k+') [multiple=multiple]').multiselect("widget");
                  var valObj;
                  if(clmns[k] == 'DEPARTMENT')
                  {
                      valObj = auditData[dataRowCnt].DEPARTMENT.split(',');
                  }
                  else if(clmns[k] == 'CLASS')
                  {
                      valObj = auditData[dataRowCnt].CLASS.split(',');
                  }
                  else if(clmns[k] == 'COURT TYPE')
		  {
		      valObj = auditData[dataRowCnt].COURT_TYPE.split(',');
                  }
                  else if(clmns[k] == 'LOSS NATURE')
		  {
		      valObj = auditData[dataRowCnt].LOSS_NATURE.split(',');
                  }
                  else if(clmns[k] == 'CLAIM STATUS')
		  {
		      valObj = auditData[dataRowCnt].CLAIM_STATUS.split(',');
                  }
                  else if(clmns[k] == 'CLAIM CATEGORY')
		  {
	              valObj = auditData[dataRowCnt].CLAIM_CATEGORY.split(',');
                  }
                  else if(clmns[k] == 'SETTLEMENT BASIS')
		  {
	              valObj = auditData[dataRowCnt].SETTLEMENT_BASIS.split(',');
                  }
                  for(var i=0;i<valObj.length;i++)
                  {
                      plgObj.find(":checkbox[value='"+valObj[i]+"']").click();
                  }       
              }
              else if(clmns[k] == 'RISK RATE')
              {
                  var riskRateValue = riskRateValMapping(auditData[dataRowCnt].RISK_RATE);
                  $(rowObj.getElementsByTagName('td')[k].getElementsByTagName('select')[0]).val(riskRateValue);
                  if(riskRateValue == 'Select')
                  {
                      $(rowObj.getElementsByTagName('td')[k].getElementsByTagName('select')[0]).prop('disabled',true);
                  }
              }
              else
              {
                   var val = "";
                   if(clmns[k] == 'DOCUMENT NO / ANNEXURE REF NO')
                   {
                        val = auditData[dataRowCnt].DOCUMENTNO;
                   }
                   else if(clmns[k] == 'AUDIT OBSERVATION')
                   {
                        val = auditData[dataRowCnt].MIDDLE_PARA;
                   }
                   else if(clmns[k] == 'RISK IMPACT')
                   {
                        val = auditData[dataRowCnt].LAST_PARA;
                   }
                   else if(clmns[k] == 'RECOMMENDATION')
                   {
                        val = auditData[dataRowCnt].RECOMMENDATION;
                   }
                   if(val == null || val == " ")
                   {
                       val = "";
                       $(rowObj.getElementsByTagName('td')[k].getElementsByTagName('input')[0]).prop('disabled',true);
                   }
                   rowObj.getElementsByTagName('td')[k].getElementsByTagName('input')[0].value = val;
              }
          }
          dataRowCnt += 1;
      }
}


function setDeleteEntries()
{
    pwr.getAllNewAddedSubParameter('<%= piid %>',callbackSetDeleteEntry);
}

var increment = 0;
function callbackSetDeleteEntry(newSubParams)
{
    if(increment == 0)
    {
        for(var i=0;i<prmtrs.length;i++)
        {
            var tabObj = document.getElementById(prmtrs[i]);
  	    var noOfRowsInTbody = tabObj.getElementsByTagName('tbody')[0].getElementsByTagName('tr').length;
  	    for(var j=0;j<noOfRowsInTbody;j++)
  	    {	       
   		 var rowObj = tabObj.getElementsByTagName('tbody')[0].getElementsByTagName('tr')[j];
    		 var subParamCellObj = rowObj.getElementsByTagName('td')[2];
   		 var pomCellObj = rowObj.getElementsByTagName('td')[0];
   		 for(var k=0;k<newSubParams.length;k++)
   		 {
     		     if(newSubParams[k].trim() == subParamCellObj.title)
     		     {       
       			  var imgObj = document.createElement("IMG"); 
       			  imgObj.src = "images/Button-Close-icon .png";
       			  imgObj.height = "20";
       			  imgObj.width = "20";  
       			  imgObj.onclick  = function(event){rowDelete(this.parentNode.parentNode.parentNode.parentNode.id,this.parentNode.parentNode.rowIndex);};
       			  imgObj.style.cursor = "pointer";
       			  pomCellObj.insertBefore(imgObj, pomCellObj.firstChild);
     		     }
   		 }
   		 increment++;   
   	    }
  	} 
     }
}



function enableFreeTxt(inpObj)
{
    var rowObj = inpObj.parentNode.parentNode;
    var dfltIndexNo = ["6","7","8","9"];
    var ClaimTypIndxNo = ["9","10","11","12"];
    if('<%= bean.getPropString("branchType") %>' == 'OD Claims' || '<%= bean.getPropString("branchType") %>' == 'Legal Claims')
    {
        if($(inpObj).val() != 'Select')
        {
             for(var i = 0; i < ClaimTypIndxNo.length; i++)
             {
                 $(rowObj).find('td:eq('+ClaimTypIndxNo[i]+') input').prop('disabled',false); 
             }        
        }
        else
        {
             for(var i = 0; i < ClaimTypIndxNo.length; i++)
	     {
	         $(rowObj).find('td:eq('+ClaimTypIndxNo[i]+') input').prop('disabled',true);
             }
        }
    }
    else
    {
        if($(inpObj).val() != 'Select')
        {
            for(var i = 0; i < dfltIndexNo.length; i++)
            {
                 $(rowObj).find('td:eq('+dfltIndexNo[i]+') input').prop('disabled',false); 
            }        
        }
        else
        {
           for(var i = 0; i < dfltIndexNo.length; i++)
           {
               $(rowObj).find('td:eq('+dfltIndexNo[i]+') input').prop('disabled',true);
           }
        }
    }
}


var clickBtnVal;
function saveReport(prmtrs,obj)
{
    clickBtnVal = obj.value;
    if(clickBtnVal == "Submit")
    {
        if(riskRateValide())
        {
        }
        else
        {
            return false;
        }
     }
     btnObj = obj;
     var arrByRowData = new Array();
     var arrOfAllTableRowData = new Array();
     var arrayOfArrayOfColumnsData = new Array();             
     for(var i=0;i<prmtrs.length;i++)
     {
          var noOfRowsInTbody = document.getElementById(prmtrs[i]).getElementsByTagName('tbody')[0].getElementsByTagName('tr').length;
          for(var j=0;j<noOfRowsInTbody;j++)
          {
  	      arrByRowData[j] = new Array();
	      var rowObj = document.getElementById(prmtrs[i]).getElementsByTagName('tbody')[0].getElementsByTagName('tr')[j];
	      
	      if('<%= bean.getPropString("branchType") %>' == 'OD Claims' || '<%= bean.getPropString("branchType") %>' == 'Legal Claims')
	      {
                  for(var k=1;k<rowObj.cells.length;k++)
		  {
		      if(k==3 || k==4 || k == 5 || k == 6 || k == 7)
		      {
			  var arr = $(rowObj).find('td:eq('+k+') [multiple=multiple]').multiselect("getChecked");
		          if(arr[0] == null)
		          {
			      arrByRowData[j][k-1] = "N/A";
			  }
			  else
			  { 
			      arrByRowData[j][k-1] = "";
			      for(var l=0;l<arr.length;l++)
			      {
				  arrByRowData[j][k-1] += arr[l].value+",";
			      }
			      arrByRowData[j][k-1] = arrByRowData[j][k-1].substring(0, arrByRowData[j][k-1].length - 1);
			  }
		      }
		      else if(k==8)
		      {
			  var obj = rowObj.getElementsByTagName('td')[k].getElementsByTagName('select')[0];
		          var value = obj.options[obj.selectedIndex].value.split('-')[0].trim();
			  if(value == 5)
			  {
			       value = 'No Audit Observation';
			  }
			  arrByRowData[j][k-1] = value;
		      }
		      else if(k==1 || k==2)
		      {
			  arrByRowData[j][k-1] = rowObj.getElementsByTagName('td')[k].title;
		      }
		      else
		      {
			 var temp = rowObj.getElementsByTagName('td')[k].getElementsByTagName('input')[0].value;
			 if(temp == "")
			 {
			     temp = " ";
			 }
		         arrByRowData[j][k-1] = temp;
		      }
                 }
	      }
	      else
	      {
                  for(var k=1;k<rowObj.cells.length;k++)
	          {
 		      if(k==3 || k==4)
 		      {
 		          var arr = $(rowObj).find('td:eq('+k+') [multiple=multiple]').multiselect("getChecked");
                          if(arr[0] == null)
                          {
   		    	      arrByRowData[j][k-1] = "N/A";
  		      	  }
  		          else
  		          { 
 			      arrByRowData[j][k-1] = "";
 			      for(var l=0;l<arr.length;l++)
 			      {
   			          arrByRowData[j][k-1] += arr[l].value+",";
 			      }
 			      arrByRowData[j][k-1] = arrByRowData[j][k-1].substring(0, arrByRowData[j][k-1].length - 1);
		          }
 	              }
 	              else if(k==5)
 	              {
     		          var obj = rowObj.getElementsByTagName('td')[k].getElementsByTagName('select')[0];
                          var value = obj.options[obj.selectedIndex].value.split('-')[0].trim();
     		          if(value == 5)
     		          {
          	    	       value = 'No Audit Observation';
     		          }
     		          arrByRowData[j][k-1] = value;
 		      }
 		      else if(k==1 || k==2)
 		      {
 		          arrByRowData[j][k-1] = rowObj.getElementsByTagName('td')[k].title;
 		      }
 		      else
 		      {
 		         var temp = rowObj.getElementsByTagName('td')[k].getElementsByTagName('input')[0].value;
 		         if(temp == "")
 		         {
 			     temp = " ";
 		         }
                         arrByRowData[j][k-1] = temp;
 		      }
                 }	                    
              }
         } 
	 arrOfAllTableRowData[i] = arrByRowData;
	 arrByRowData = [];
    }       
    var count = 0;
    for(var n=0;n<arrOfAllTableRowData.length;n++)
    {
 	 for(var o=0;o<arrOfAllTableRowData[n].length;o++)
 	 {
       	      for(var p=0;p<arrOfAllTableRowData[n][o].length;p++)
       	      {
 		   if(n == 0 && o == 0)
 		   {
   			arrayOfArrayOfColumnsData[p] = new Array();
		   }
 		   arrayOfArrayOfColumnsData[p][count] = arrOfAllTableRowData[n][o][p]; 
	      }
 	      count++;
 	 }
    }
    document.getElementById('branch_type').value = '<%= bean.getPropString("branchType") %>';
    pwr.updateInitialSelectedDataByAuditor('<%= piid %>',arrayOfArrayOfColumnsData,'<%= workStepName %>','<%= bean.getPropString("branchType") %>',callbackSaveAuditorReport); 
}


                                      
function callbackSaveAuditorReport(value)
{
    if(clickBtnVal != "Submit")
    {
        document.getElementById('savebtn').click();
    }
}

function riskRateValide()
{
    var branchTypVal = '<%= bean.getPropString("branchType") %>';
    for(var i=0;i<prmtrs.length;i++)
    {
        var tabObj = document.getElementById(prmtrs[i]);
        var noOfRowsInTbody = tabObj.getElementsByTagName('tbody')[0].getElementsByTagName('tr').length;
        for(var j=0;j<noOfRowsInTbody;j++)
        {    
            var rowObj = tabObj.getElementsByTagName('tbody')[0].getElementsByTagName('tr')[j];
	    var arr;
            var arr1;
            var arr2;
            var arr3;
            var arr4;
            var cellObj;
            if(branchTypVal == 'OD Claims' || branchTypVal == 'Legal Claims')
            {
      	        cellObj = rowObj.getElementsByTagName('td')[8].getElementsByTagName('select')[0];
      	        var firstDD = $(rowObj).find('td:eq(3) [multiple=multiple]');
		var secondDD = $(rowObj).find('td:eq(4) [multiple=multiple]');
		var thirdDD = $(rowObj).find('td:eq(5) [multiple=multiple]');
      	        var departDDObj = $(rowObj).find('td:eq(6) [multiple=multiple]');
		var classDDObj = $(rowObj).find('td:eq(7) [multiple=multiple]');
		var riskRateDDObj = $(rowObj).find('td:eq(8) select:first');
	        var docNoObj = $(rowObj).find('td:eq(9) input');
	        arr2 = $(firstDD).multiselect("getChecked");
	        arr3 = $(secondDD).multiselect("getChecked");
	        arr4 = $(thirdDD).multiselect("getChecked");
	        arr = $(departDDObj).multiselect("getChecked");
                arr1 = $(classDDObj).multiselect("getChecked");
      	    }
      	    else
      	    {
      	        cellObj = rowObj.getElementsByTagName('td')[5].getElementsByTagName('select')[0];
      	        var departDDObj = $(rowObj).find('td:eq(3) [multiple=multiple]');
		var classDDObj = $(rowObj).find('td:eq(4) [multiple=multiple]');
		var riskRateDDObj = $(rowObj).find('td:eq(5) select:first');
	        var docNoObj = $(rowObj).find('td:eq(6) input');
	        arr = $(departDDObj).multiselect("getChecked");
                arr1 = $(classDDObj).multiselect("getChecked");
      	    }
      	    //var paramCellObj = rowObj.getElementsByTagName('td')[1].title;
            var value = cellObj.options[cellObj.selectedIndex].value;
            if(value != "5 - No Audit Observation")
            {
                showClickedParameterDataTable(tabObj.id);
                divActivate(document.getElementById("_"+tabObj.id).childNodes[0]);
                /*if(tabObj.style.display == "none")
                {
                     tabObj.style.display = "block";
                     document.getElementById('_'+prmtrs[i]).click();
                     document.getElementById('_'+prmtrs[i]).childNodes[0].click();
                }*/
                if(branchTypVal == 'OD Claims' || branchTypVal == 'Legal Claims')
                {
                    if(arr2[0] == null)
		    {
	                firstDD.multiselect("open");
		        return false;
		    }    
		    if(arr3[0] == null)
		    {
			secondDD.multiselect("open");
			return false;
		    }
		    if(arr4[0] == null)
		    {
			thirdDD.multiselect("open");
			return false;
		    }
                }
                if(arr[0] == null)
		{
	            departDDObj.multiselect("open");
		    return false;
		}
		else if(arr1[0] == null)
		{
		    classDDObj.multiselect("open");
		    return false;
		}
		else if($(riskRateDDObj).val() == "Select")
		{
	            $(riskRateDDObj).focus();
	            return false;
		}
		else if($(docNoObj).val() == "")
		{
	            $(docNoObj).click();
	            return false;
                }
            }
            else
            {}
        }
    }
    return true;
}


function addSubParameter()
{
    var departmentDropDownOptions;
    var classDropDownOptions; 
    var riskRateDropDownOptions;
    var claimCtgyDropDownOptions;
    var OD_claimStatusDropDownOptions;
    var stlmntBsisDropDownOptions;
    var courtTypDropDownOptions;
    var ntreLossDropDownOptions;
    var Legal_claimStatusDropDownOptions;
    for(var i=0;i<dprtmntList.length;i++)
    {
        departmentDropDownOptions += "<option value=\""+dprtmntList[i]+"\">"+dprtmntList[i]+"</option>";
    }
    for(var i=0;i<classList.length;i++)
    {
        classDropDownOptions += "<option value=\""+classList[i]+"\">"+classList[i]+"</option>";
    }  
    for(var i=0;i<riskrtList.length;i++)
    {
        riskRateDropDownOptions += "<option value=\""+riskrtList[i]+"\" style='background:\""+riskRateColorMapp(riskrtList[i].split('-')[0]).split('-')[0]+"\";color:\""+riskRateColorMapp(riskrtList[i].split('-')[0]).split('-')[1]+"\";' >"+riskrtList[i]+"</option>";
    } 
    if('<%= bean.getPropString("branchType") %>' == 'OD Claims')
    {
        for(var i=0;i<claimCtgyList.length;i++)
        {
    	    claimCtgyDropDownOptions += "<option value=\""+claimCtgyList[i]+"\">"+claimCtgyList[i]+"</option>";
    	}
        for(var i=0;i<OD_claimStatusList.length;i++)
    	{
    	    OD_claimStatusDropDownOptions += "<option value=\""+OD_claimStatusList[i]+"\">"+OD_claimStatusList[i]+"</option>";
    	}
    	for(var i=0;i<stlmntBsisList.length;i++)
    	{
            stlmntBsisDropDownOptions += "<option value=\""+stlmntBsisList[i]+"\">"+stlmntBsisList[i]+"</option>";
    	}
    }
    else if('<%= bean.getPropString("branchType") %>' == 'Legal Claims')
    {
    	for(var i=0;i<courtTypList.length;i++)
    	{
    	    courtTypDropDownOptions += "<option value=\""+courtTypList[i]+"\">"+courtTypList[i]+"</option>";
        }
        for(var i=0;i<ntreLossList.length;i++)
        {
            ntreLossDropDownOptions += "<option value=\""+ntreLossList[i]+"\">"+ntreLossList[i]+"</option>";
        }
        for(var i=0;i<Legal_claimStatusList.length;i++)
        {
            Legal_claimStatusDropDownOptions += "<option value=\""+Legal_claimStatusList[i]+"\">"+Legal_claimStatusList[i]+"</option>";
        }
    }
    var tbodyObj = document.getElementById(currentshowtbl).tBodies[0];
    var existRows = tbodyObj.getElementsByTagName('tr').length;
    var parameterVal = tbodyObj.getElementsByTagName('tr')[0].getElementsByTagName('td')[1].title;
    var newtableRowObj = tbodyObj.insertRow(existRows);   
    for(var j=0;j<columnNames('StartAuditPage','<%= bean.getPropString("branchType") %>').length;j++)
    {
        var tableRowCellObj = newtableRowObj.insertCell(j); 
        tableRowCellObj.className = "dynamicTableCell"; 
        if(columnNames('StartAuditPage','<%= bean.getPropString("branchType") %>')[j] == "POM NO")
        {   
    	     tableRowCellObj.innerHTML = "<image style='cursor:pointer;' onClick='rowDelete(currentshowtbl,this.parentNode.parentNode.rowIndex);' height='20' width='20' src='images/Button-Close-icon .png' />"+"  <span>"+(existRows+1)+"</span>";
        }
        else if(columnNames('StartAuditPage','<%= bean.getPropString("branchType") %>')[j] == "DEPARTMENT")
        {
             tableRowCellObj.innerHTML = "<select multiple='multiple' class='ApInptSelect'>"+departmentDropDownOptions+"</select>";   
        }
        else if(columnNames('StartAuditPage','<%= bean.getPropString("branchType") %>')[j] == "CLASS")
        {
             tableRowCellObj.innerHTML = "<select multiple='multiple' class='ApInptSelect'>"+classDropDownOptions+"</select>";
        }
        else if(columnNames('StartAuditPage','<%= bean.getPropString("branchType") %>')[j] == "PARAMETER")
        {
             tableRowCellObj.innerHTML = parameterVal;
             setValueInTitle(tableRowCellObj,parameterVal);
        }
        else if(columnNames('StartAuditPage','<%= bean.getPropString("branchType") %>')[j] == "SUB PARAMETER")
        {
             tableRowCellObj.innerHTML = "<input type='text' size='5' onClick='subParambox_open(this);' />";
             currentInputObj = tableRowCellObj.childNodes[0];
        }
        else if(columnNames('StartAuditPage','<%= bean.getPropString("branchType") %>')[j] == "RISK RATE")
        {
             tableRowCellObj.innerHTML = "<select class='ApInptSelect' disabled onChange='enableFreeTxt(this);' ><option value='Select'>Select</option>"+riskRateDropDownOptions+"</select>";
        }
        else if(columnNames('StartAuditPage','<%= bean.getPropString("branchType") %>')[j] == "CLAIM CATEGORY")
	{
	    tableRowCellObj.innerHTML = "<select multiple='multiple' class='ApInptSelect'>"+claimCtgyDropDownOptions+"</select>";
	}
	else if(columnNames('StartAuditPage','<%= bean.getPropString("branchType") %>')[j] == "CLAIM STATUS")
	{
	    if('<%= bean.getPropString("branchType") %>' == 'OD Claims')
	    {
	        tableRowCellObj.innerHTML = "<select multiple='multiple' class='ApInptSelect'>"+OD_claimStatusDropDownOptions+"</select>";
	    }
	    else
	    {
	        tableRowCellObj.innerHTML = "<select multiple='multiple' class='ApInptSelect'>"+Legal_claimStatusDropDownOptions+"</select>";
	    }
	}
	else if(columnNames('StartAuditPage','<%= bean.getPropString("branchType") %>')[j] == "SETTLEMENT BASIS")
	{
	    tableRowCellObj.innerHTML = "<select multiple='multiple' class='ApInptSelect'>"+stlmntBsisDropDownOptions+"</select>";
	}
	else if(columnNames('StartAuditPage','<%= bean.getPropString("branchType") %>')[j] == "COURT TYPE")
	{
	    tableRowCellObj.innerHTML = "<select multiple='multiple' class='ApInptSelect'>"+courtTypDropDownOptions+"</select>";
	}
	else if(columnNames('StartAuditPage','<%= bean.getPropString("branchType") %>')[j] == "LOSS NATURE")
	{
	    tableRowCellObj.innerHTML = "<select multiple='multiple' class='ApInptSelect'>"+ntreLossDropDownOptions+"</select>";
	}
        else
        {
             tableRowCellObj.innerHTML = "<input type='text' onmouseover='getValueOfField(this);' onClick='lightbox_open(this);' size='5' />";
        }        
    }
    if('<%= bean.getPropString("branchType") %>' == 'OD Claims' || '<%= bean.getPropString("branchType") %>' == 'Legal Claims')
       {
           $('[multiple=multiple]').multiselect({
		 header: false,
		 minWidth : 100,
		 show:['slide', 500],
		 hide:['explode', 500],
		 beforeopen: function(event, ui)
		 {
		     var currentDD = this.parentNode.cellIndex;
		 if(currentDD == 4 || currentDD == 5 || currentDD == 6 || currentDD == 7)
			 {
			      var rowObj1 = this.parentNode.parentNode;
			      var arr1 = $(rowObj1).find('td:eq((currentDD-1)) [multiple=multiple]').multiselect("getChecked");
			      if(arr1[0] == null)
			      {
				//  $(this).multiselect('disable');
			      }
		     }
		 },
		 close: function(event, ui)
		 {
		      var currentDD = this.parentNode.cellIndex;
			  if(currentDD == 3 || currentDD == 4 || currentDD == 5 || currentDD == 6)
			  {
			      var arr = $(this).multiselect("getChecked");
			      if(arr[0] != null)
			      {
				   var rowObj = this.parentNode.parentNode;
				  // $(rowObj).find('td:eq(currentDD+1) [multiple=multiple]').multiselect("enable");
			      }
			  }
			  if(currentDD == 7)
			  {
			       var arr2 = $(this).multiselect("getChecked");
			       if(arr2[0] != null)
			       {
				   var rowObj = this.parentNode.parentNode;
				   $(rowObj).find('td:eq(8) select').prop('disabled',false);
			       } 
			  } 
		     }
	  }); 
       }
       else
       {
           $('[multiple=multiple]').multiselect({
                  header: false,
                  minWidth : 100,
                  show:['slide', 500],
                  hide:['explode', 500],
                  beforeopen: function(event, ui)
                  {
        	          if(this.parentNode.cellIndex == 4)
    	          {
    	              var rowObj1 = this.parentNode.parentNode;
    	              var arr1 = $(rowObj1).find('td:eq(3) [multiple=multiple]').multiselect("getChecked");
    	              if(arr1[0] == null)
    	              {
    	                  $(this).multiselect('disable');
    	              }
                      }
                  },
                  close: function(event, ui)
                  {
    	          if(this.parentNode.cellIndex == 3)
    	          {
    	              var arr = $(this).multiselect("getChecked");
    	              if(arr[0] != null)
    	              {
    	                  var rowObj = this.parentNode.parentNode;
    	                  $(rowObj).find('td:eq(4) [multiple=multiple]').multiselect("enable");
    	              }
    	          }
    	          if(this.parentNode.cellIndex == 4)
    	          {
    	              var arr2 = $(this).multiselect("getChecked");
    	              if(arr2[0] != null)
    	              {
    	   	          var rowObj = this.parentNode.parentNode;
    		          $(rowObj).find('td:eq(5) select').prop('disabled',false);
    	              } 
    	          } 
    	      }
         }); 
     }
   pwr.addRowForSubParameter('<%= piid %>','<%= region %>','<%= branch %>',parameterVal,callbackaddRowForSubParameter);
}   


var newCreatedSubParameterId;
function callbackaddRowForSubParameter(val)
{
    newCreatedSubParameterId = val;
    currentInputObj.click();
} 


function rowDelete(tableId,rowNo)
{
    var totalRow = document.getElementById(tableId).getElementsByTagName('tbody')[0].rows.length;
    if(totalRow != 1)
    {
        var parameterValue = document.getElementById(tableId).rows[rowNo].cells[1].title;
        var subParameterValue = document.getElementById(tableId).rows[rowNo].cells[2].title;
        pwr.deleteSubparameter('<%= piid %>',parameterValue,subParameterValue,callbacksubParameterValue);
        document.getElementById(tableId).deleteRow(rowNo);
        resetPOMNo(tableId);
    }
    else
    {
        alert('Atleast one Subparameter should for each Parameter.');
    }
}


 
function resetPOMNo(tableId)
{
    var tbodyObj = document.getElementById(tableId).tBodies[0];
    var rowNos = tbodyObj.getElementsByTagName("tr").length;
    for(var i=0;i<rowNos;i++)
    {
        var pomCellObj = tbodyObj.getElementsByTagName("tr")[i].getElementsByTagName("td")[0].getElementsByTagName("span")[0];
        pomCellObj.innerHTML = (i+1);
    }
}   
       

function callbacksubParameterValue(value){} 


function setValuesInFieldsSubParam(piid)
{
    var subParam = document.getElementById('subParamTextArea').value.trim();
    if(subParam == null || subParam == '')
    {
        return false;
    }
    else
    {
        var currentTRObj = subParamFieldObj.parentNode.parentNode;
        currentTRObj.getElementsByTagName('td')[2].getElementsByTagName('input')[0].value = subParam;
        var parameterValue = currentTRObj.getElementsByTagName('td')[1].title;
        pwr.addSubparameter(piid,subParam,newCreatedSubParameterId,parameterValue,callbackAddSubParameter);
    }
}
 

function callbackAddSubParameter(val)
{   if(val == 0)
    {
        document.getElementById('subParamTextArea').style.borderColor = "red";
        alert("Cannot add duplicate Sub Parameter.");
        return false;
    }
    else
    {
        var tdObj = subParamFieldObj.parentNode;
        tdObj.removeChild(tdObj.childNodes[0]);
        //tdObj.innerHTML = ellipsify(document.getElementById('subParamTextArea').value);
        tdObj.innerHTML = document.getElementById('subParamTextArea').value;
        setValueInTitle(tdObj,document.getElementById('subParamTextArea').value);
        var trObj =tdObj.parentNode;
        $(trObj).find('td input').prop('disabled',true);
        document.getElementById('subParamTextArea').value = "";
        document.getElementById('subParamPopup').style.display='none';
        document.getElementById('fade').style.display='none';
    }
}


var subParamFieldObj;
function subParambox_open(Obj)
{
    subParamFieldObj = Obj;
    window.scrollTo(0,0);
    document.getElementById('subParamPopup').style.display='block';
    document.getElementById('fade').style.display='block';
    document.getElementById("subParamTextArea").focus();
    setValueInPopupSubParam();  
}

function subParambox_close()
{
    document.getElementById('subParamPopup').style.display='none';
    document.getElementById('fade').style.display='none';
    var closeImageObj = currentInputObj.parentNode.parentNode.getElementsByTagName('td')[0].getElementsByTagName('img')[0];
    closeImageObj.click();
}


function setValueInPopupSubParam()
{
    var subParamObj = document.getElementById('subParamTextArea');
    var currentTRObj = subParamFieldObj.parentNode.parentNode;
    subParamObj.value = currentTRObj.getElementsByTagName('td')[2].getElementsByTagName('input')[0].value;
}

 
function parambox_close()
{
    document.getElementById('paramPopup').style.display = "none";
    document.getElementById('fade').style.display = "none";
}

</script>

<div id="parameterLinkContainerId" class="parameterLinkContainerStyle"></div>
<div id="dynamicCreatedTableContainerId"></div>
<div id="addSubParam" onClick="addSubParameter();">
  <img src="images/index.jpg" height="20" width="120" /><br />
   Add New SubParameter.
</div>

<!--  
<div id="deleteParam" onClick="viewParameterList();">
  <img src="images/index.jpg" height="20" width="120" /><br />
     Delete Parameter.
</div>  
-->

<table id="scheduledAuditInfo"  width="100%" name="scheduledAuditInfo" >
<tr>
 <th>Region</th>
 <th>Audit Type</th>
 <th>Location Name</th>
 <th>Audit Start Date</th>
 <th>Audit End Date</th>
</tr>
<tr>
 <td><%= bean.getPropString("region") %></td>
 <td><%= bean.getPropString("branchType")+" Audit" %></td>
 <td><%= bean.getPropString("branch") %></td>
 <td><%= customUtility.getDateWithFormate(bean.getPropDate("auditStartDate")) %></td>
 <td><%= customUtility.getDateWithFormate(bean.getPropDate("auditEndDate")) %></td>
</tr>
</table>
<div class="uploadDivStl" onclick="document.getElementById('uploadAnnexureAuditor').click();">
  <img src="images/index.jpg" height="20" width="120" /><br />
  Upload Auditor Annexure.
</div>
<div class="uploadDivStl" onclick="document.getElementById('sampleDoc').click();">
  <img src="images/index.jpg" height="20" width="120" /><br />
  View Sample Document.
</div>
<div class="uploadDivStl" onClick="openAuditHistory('AuditHistory.jsp?piid=<%=piid%>');">
  <img src="images/index.jpg" height="20" width="120" /><br />
   View Audit History.
</div>
<div class="uploadDivStl" onClick="openAuditHistory('AuditorStatus.jsp?auditor_username=<%=bizSite.getCurrentUser()%>');">
  <img src="images/index.jpg" height="20" width="120" /><br />
   Auditor Status.
</div>
<div class="saveSubmitContainer">
<div id="SaveWorkingContainer" class="saveButtonStyle"><input type="button" style="width:150px;" id="saveReportBtn" class="ApScrnButton" value="Save" onClick="saveReport(allDynamicCreatedTableIds,this);" /></div>
<div id="SubmitWorkingContainer" class="submitButtonStyle"><input type="button" style="width:150px;" value="Submit" class="ApScrnButton" onClick="saveReport(allDynamicCreatedTableIds,this);" /></div>
</div>
<div id="light">
  <table>
    <tr>
       <td>
         Document No. :
         <div class="error">Add multiple numbers as comma separated.</div>
       </td>
       <td><textarea cols='30' onkeyup='limiter(this);' id='documentNo' rows='3'></textarea></td>
    </tr>
    <tr>
       <td>Audit Observation :</td>
       <td><textarea cols='30' onkeyup='limiter(this);' id='middlePara' rows='3'></textarea></td>
    </tr>
    <tr>
       <td>Risk Impact :</td>
       <td><textarea cols='30' id='lastPara' onkeyup='limiter(this);' rows='3'></textarea></td>
    </tr>
    <tr>
       <td>Recommendation :</td>
       <td><textarea cols='30' onkeyup='limiter(this);' id='reccommendation' rows='3'></textarea></td>
    </tr>
    <tr>
      <td colspan="2"><div onClick="setValuesInFields('<%=bean.getPropString("branchType")%>');" class="popupBtn" >OK</div></td>
    </tr>
  </table>
   <a href="#" class="cancel" onClick="lightbox_close();"></a>
</div>
<div id="subParamPopup">
   <table>
     <tr>
       <td>Sub Parameter :</td>
       <td><textarea cols='30' id='subParamTextArea' rows='3'></textarea></td>
     </tr>
     <tr>
       <td colspan="2"><div onClick="setValuesInFieldsSubParam('<%= piid %>');" class="popupBtn" >OK</div></td>
     </tr>
   </table>
  <a href="#" class="cancel" onClick="subParambox_close();"></a>  
</div>

<div id="paramPopup">
   <h3>Select Parameter that you want to delete.</h3>
   <div id="paramList"></div>
  <a href="#" class="cancel" onClick="parambox_close();"></a> 
</div>

<div id="fade"></div> 

</div>
<style>
 table
{
  border:2px solid white;
  border-collapse:collapse;
}
  table td
{
    border:1px solid white;
    border-collapse:collapse;
    text-align : center;
    background-color:#D2E0F1;
}
  table th
{
   border:1px solid white;
   border-collapse:collapse;
}

</style>
<div style="display:none;">

    <br clear="all">
<br clear="all">
<input class="ApScrnButton" name="bizsite_completeTask" id="completeWS" type="submit" tabindex="0" value="<bizsolo:getLabel name='COMPLETE_LABEL' type='RESOURCE'/>" onMouseOut="this.className='ApScrnButton';" onMouseOver="this.className='ApScrnButtonHover';" onClick="clickedButton=this.name;this.onsubmit = new Function('return false');">

    <br clear="all">
Branch<Label class="" id="" for="comboBox1"><sbm:message key="branch"></sbm:message></Label>
    <sfe:widget name="sbm.combobox" id="branch" args="{'size':20, 'readonly':false, 'visible':true, 'disabled':false, 'cascade':false, 'level':0, 'validationType':'none', 'validation':{}, 'toolTip':'', 'tabOrder':'0'}" />

    <br clear="all">
Branch Type:<sfe:widget name="sbm.combobox" id="branch_type" args="{'size':20, 'readonly':false, 'visible':true, 'disabled':false, 'cascade':false, 'level':0, 'validationType':'none', 'validation':{}, 'toolTip':'', 'tabOrder':'0'}" value="[{'selected':false,'value':'Select','label':'Select'},{'selected':false,'value':'Branch Office','label':'Branch Audit'},{'selected':false,'value':'Retail HUB Operation','label':'Retail HUB Operation'},{'selected':false,'value':'Commercial HUB Operation','label':'Commercial HUB Operation'},{'selected':false,'value':'OD Claims','label':'OD Claims'},{'selected':false,'value':'Legal Claims','label':'Legal Claims'},{'selected':false,'value':'Center Office','label':'Service Center Audit'}]" />

    <br clear="all">
Region:<sfe:widget name="sbm.combobox" id="region" args="{'size':20, 'readonly':false, 'visible':true, 'disabled':false, 'cascade':false, 'level':0, 'validationType':'none', 'validation':{}, 'toolTip':'', 'tabOrder':'0'}" />

    <br clear="all">
Audit Start Date:<sfe:widget name="form.datetime" id="auditStartDateDS" args="{'dateonly':false, 'visible':true, 'readonly':false, 'validationType':'none', 'validation':{}, 'toolTip':'', 'tabOrder':'0'}" />

    <br clear="all">
Audi<sfe:widget name="form.datetime" id="auditEndDateDS" args="{'dateonly':false, 'visible':true, 'readonly':false, 'validationType':'none', 'validation':{}, 'toolTip':'', 'tabOrder':'0'}" />

    <br clear="all">
<div style="display: inline;" id="document1"><bizsolo:getDS type="field" name="uploadAnnexureAuditor" multiline="true" wsName="StartTechnicalAudit" appendWith="false"></bizsolo:getDS></div>


    <br clear="all">
<div style="display: inline;" id="document2"><bizsolo:getDS type="field" name="sampleDoc" multiline="true" wsName="StartTechnicalAudit" appendWith="false" writePerm="false"></bizsolo:getDS></div>


    <br clear="all">
<input class="ApScrnButton" name="bizsite_saveTask" id="savebtn" type="submit" tabindex="0" value="<bizsolo:getLabel name='SAVE_LABEL' type='RESOURCE'/>" onMouseOut="this.className='ApScrnButton';" onMouseOver="this.className='ApScrnButtonHover';" onClick="clickedButton=this.name;this.onsubmit = new Function('return false');">

    <br clear="all">
<br clear="all">
</div>
    

</div>
<!-- Footer -->

<div id="cmdDiv" style="height:46px;">
<table width="100%" height="100%" cellpadding="0" align="center" cellspacing="0" border="0">
<tr align="center">
<td class="ApButtonDarkBg" width="63%">
<table border="0" cellspacing="0" cellpadding="0">
<tr>
<td class="ApBtnSpace">
<bizsolo:isNotSuspended><form:button id="bizsite_completeTask" name="bizsite_completeTask" link="COMPLETE_LABEL" resourceType="RESOURCE"/> </bizsolo:isNotSuspended></td>
<td class="ApBtnSpace">
<form:button id="bizsite_saveTask" name="bizsite_saveTask" link="SAVE_LABEL" resourceType="RESOURCE"/> </td>
<bizsolo:isAssigned></bizsolo:isAssigned><td class="ApBtnSpace">
<form:button id="bizsite_reset" name="bizsite_reset" link="RESET_LABEL" onclick="sbm.utils.reset" resourceType="RESOURCE"/> </td>
<td class="ApBtnSpace">
<form:button id="btn-cancel" name="btn-cancel" link="CANCEL_LABEL" onclick="sbm.utils.cancel" resourceType="RESOURCE"/> </td>
<bizsolo:isAssigned><td class="ApBtnSpace"><input class="ApInptTxt" type="text" name="bizsite_assigneeName" size="20"></td><td class="ApBtnSpace"><a href="javascript://" onClick="setUserControl(document.form.bizsite_assigneeName);searchUser()"><img width="16" height="16" border="0" title="Search" src="<c:out value='${contextPath}'/>bpmportal/css/app<%= bizManage.getTheme() %>/images/icon_edit_user_search_single.gif"></img></a></td><td class="ApBtnSpace"><form:button id="bizsite_reassignTask" name="bizsite_reassignTask" link="REASSIGN_LABEL" resourceType="RESOURCE"/> </td>
</bizsolo:isAssigned></tr>
</table>
</td>
</tr>
</table>
</div>

  
                    <div id="resizablepanel" style="display:none">
                        <div class="hd">Alert Dialog</div>
                        <div class="bd"></div>
                        <div class="ft"></div>
                    </div> 
<div id="southDiv" style="height:0px;display:none;"></div></form>
</body>

<script language="JavaScript">
<!--
function beforeInitControls() {
}
-->
</script>
<script language="JavaScript">
<!--
function userValidationJavascript() {
return true;
}
-->
</script>
<sbm:dataSources appName="InternalAuditTechnical" appType="bizlogic">
</sbm:dataSources>
<script language="JavaScript">
<!---->
</script>
<!--Initialize extensible widgets.-->
<script language="JavaScript">
<!--
var _dateFormats = {date:'<%=bean.getPropString(PublicResources.JS_CALENDAR_DATE_FORMAT)%>', dateOnly:'<%=bean.getPropString(PublicResources.JS_CALENDAR_DATE_ONLY_FORMAT)%>'};

var allWidgets = [{widget:'branch', bound:'true', editable:'true', type:'sbm.combobox', source: {type:'DATASLOT', dataSlotName:'branch', dataSlotType:'STRING'}, target:{type:'DATASLOT', dataSlotName:'branch', dataSlotType:'STRING'}, dsType:'STRING', service:'false'},
{widget:'branch_type', bound:'false', editable:'true', type:'sbm.combobox', source: {type:'STATIC'}, target:{type:'DATASLOT', dataSlotName:'branchType', dataSlotType:'STRING'}, dsType:'', service:'false'},
{widget:'region', bound:'true', editable:'true', type:'sbm.combobox', source: {type:'DATASLOT', dataSlotName:'region', dataSlotType:'STRING'}, target:{type:'DATASLOT', dataSlotName:'region', dataSlotType:'STRING'}, dsType:'STRING', service:'false'},
{widget:'auditStartDateDS', bound:'true', editable:'true', type:'form.datetime', source: {type:'DATASLOT', dataSlotName:'auditStartDate', dataSlotType:'DATETIME'}, target:{type:'DATASLOT', dataSlotName:'auditStartDate', dataSlotType:'DATETIME'}, dsType:'DATETIME', service:'false'},
{widget:'auditEndDateDS', bound:'true', editable:'true', type:'form.datetime', source: {type:'DATASLOT', dataSlotName:'auditEndDate', dataSlotType:'DATETIME'}, target:{type:'DATASLOT', dataSlotName:'auditEndDate', dataSlotType:'DATETIME'}, dsType:'DATETIME', service:'false'}
];
var businessObjects = [];
var formWidgetHandler;

sbm.utils.onDOMReady = function() {
YAHOO.util.Event.onDOMReady(function(){
formWidgetHandler = new FormWidgetHandler(allWidgets,null,{processName:'InternalAuditTechnical',processType:'bizlogic',maxMultiLineLength:${maxMultiLineLength},adapletCache:{'user':''}},'<%=request.getParameter(BizSoloRequest.BSS_FIID)%>');
 });
 }
Ext.onReady(function(){
 var task = new Ext.util.DelayedTask(function(){
});
  task.delay(500);
  var viewport = new Bm.util.BmViewport('',{resultComponentXtype:'container'});

});

   
    scrollToErrors = function() {
        var errorsDiv = document.getElementById('errors');
        if(errorsDiv !== null) {
            errorsDiv.scrollIntoView();
        }
    }
    sbm.utils.onFormSubmit = function() {
        if(!formWidgetHandler.validateWidgets()) {
            scrollToErrors();
            return false;
        }
        try{
            if(!userValidationJavascript()) {
                scrollToErrors();
                return false;
            }              
            sbm.utils.handleFormSubmit();
        }catch(e){
            scrollToErrors();
            return false;
        }

                            document.form.action='<%=response.encodeURL("StartTechnicalAudit.jsp")%>';
         if(allWidgets.length > 0)formWidgetHandler.saveDataSlots();
         return true;
}
-->
</script>

</html>